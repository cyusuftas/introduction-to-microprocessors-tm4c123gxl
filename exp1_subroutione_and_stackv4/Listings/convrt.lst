


ARM Macro Assembler    Page 1 


    1 00000000 20000000 
                       first   EQU              0x20000000
    2 00000000         ;cnt  EQU  0x0A
    3 00000000         ;cnt2 EQU  0x20
    4 00000000 20000500 
                       NUM     EQU              0x20000500
    5 00000000         ;value  EQU  0x7FFFFFFF
    6 00000000         ;value  EQU  0xF1135
    7 00000000                 AREA             my_sr, CODE, READONLY
    8 00000000                 THUMB
    9 00000000                 EXPORT           CONVRT
   10 00000000         CONVRT  PROC
   11 00000000 4D40            LDR              R5,=NUM
   12 00000002         ;LDR  R0,=first
   13 00000002 F04F 0100       MOV              R1,#0
   14 00000006 F04F 0200       MOV              R2,#0
   15 0000000A F04F 0A00       MOV              R10,#0      ;clear virtual carr
                                                            y
   16 0000000E 46A8            MOV              R8,R5
   17 00000010 F108 080A       ADD              R8,#10      ;EOT address
   18 00000014 5481    fill    STRB             R1,[R0,R2]  ;SPACE directives c
                                                            an be used
   19 00000016 3201            ADDS             R2,#1
   20 00000018 2A0A            CMP              R2,#0x0A
   21 0000001A D1FB            BNE              fill
   22 0000001C F04F 0200       MOV              R2,#0
   23 00000020         
   24 00000020         l_shift
   25 00000020 46A1            MOV              R9,R4
   26 00000022 EA4F 79D9       LSR              R9,#31
   27 00000026 46CA            MOV              R10,R9      ;carry at r10
   28 00000028 EA4F 0444       LSL              R4,#1
   29 0000002C         lsl_mem
   30 0000002C 7806            LDRB             R6,[R0]
   31 0000002E F36F 1607       BFC              R6,#4,#4
   32 00000032 EA4F 0646       LSL              R6,#1
   33 00000036 4456            ADD              R6,R10
   34 00000038         ;CMP  R6,#4
   35 00000038         ;ADDHI R6,#3
   36 00000038 F006 0B0F       AND              R11,R6,#0x0F
   37 0000003C F880 B000       STRB             R11,[R0]
   38 00000040 F100 0001       ADD              R0,#1
   39 00000044 F102 0201       ADD              R2,#1
   40 00000048 4637            MOV              R7,R6
   41 0000004A EA4F 1717       LSR              R7,#4
   42 0000004E 46BA            MOV              R10,R7
   43 00000050 2A0A            CMP              R2,#10
   44 00000052 D1EB            BNE              lsl_mem
   45 00000054 F04F 0200       MOV              R2,#0
   46 00000058 F04F 5000       LDR              R0,=first
   47 0000005C 2B01            CMP              R3,#1
   48 0000005E BF08 2109       MOVEQ            R1,#9
   49 00000062 D013            BEQ              ascii
   50 00000064         check
   51 00000064 7806            LDRB             R6,[R0]
   52 00000066 F102 0201       ADD              R2,#1
   53 0000006A 2E05            CMP              R6,#5
   54 0000006C BF28 3603       ADDHS            R6,#3
   55 00000070 7006            STRB             R6,[R0]



ARM Macro Assembler    Page 2 


   56 00000072 F100 0001       ADD              R0,#1
   57 00000076 2A0A            CMP              R2,#0x0A
   58 00000078 D1F4            BNE              check
   59 0000007A F04F 5000       LDR              R0,=first
   60 0000007E F04F 0200       MOV              R2,#0
   61 00000082 3B01            SUBS             R3,#1
   62 00000084 BF08 2109       MOVEQ            R1,#9
   63 00000088 D000            BEQ              ascii
   64 0000008A D1C9            BNE              l_shift
   65 0000008C         ascii
   66 0000008C F04F 5000       LDR              R0,=first
   67 00000090         ;MOV  R1,#9   ;holds counter
   68 00000090 F04F 0200       MOV              R2,#0       ;holds ascii equiva
                                                            lent
   69 00000094 5C43            LDRB             R3,[R0,R1]
   70 00000096 2B00            CMP              R3,#0
   71 00000098 BF08 2230       MOVEQ            R2,#0x30
   72 0000009C 2B01            CMP              R3,#1
   73 0000009E BF08 2231       MOVEQ            R2,#0x31
   74 000000A2 2B02            CMP              R3,#2
   75 000000A4 BF08 2232       MOVEQ            R2,#0x32
   76 000000A8 2B03            CMP              R3,#3
   77 000000AA BF08 2233       MOVEQ            R2,#0x33
   78 000000AE 2B04            CMP              R3,#4
   79 000000B0 BF08 2234       MOVEQ            R2,#0x34
   80 000000B4 2B05            CMP              R3,#5
   81 000000B6 BF08 2235       MOVEQ            R2,#0x35
   82 000000BA 2B06            CMP              R3,#6
   83 000000BC BF08 2236       MOVEQ            R2,#0x36
   84 000000C0 2B07            CMP              R3,#7
   85 000000C2 BF08 2237       MOVEQ            R2,#0x37
   86 000000C6 2B08            CMP              R3,#8
   87 000000C8 BF08 2238       MOVEQ            R2,#0x38
   88 000000CC 2B09            CMP              R3,#9
   89 000000CE BF08 2239       MOVEQ            R2,#0x39
   90 000000D2 702A            STRB             R2,[R5]
   91 000000D4         ;PUSH {R5}
   92 000000D4 F105 0501       ADD              R5,#1
   93 000000D8 3901            SUBS             R1,#1
   94 000000DA D5D7            BPL              ascii
   95 000000DC F04F 0100       MOV              R1,#0
   96 000000E0         ;POP  {R5}
   97 000000E0 4D08            LDR              R5,=NUM
   98 000000E2 462F            MOV              R7,R5
   99 000000E4 F107 0709       ADD              R7,#9
  100 000000E8         ;SUB  R5,#9
  101 000000E8         check_zeros
  102 000000E8 7828            LDRB             R0,[R5]
  103 000000EA 2830            CMP              R0,#0x30
  104 000000EC BF08 3501       ADDEQ            R5,#1
  105 000000F0 D102            BNE              exit
  106 000000F2 42BD            CMP              R5,R7
  107 000000F4 D1F8            BNE              check_zeros
  108 000000F6 D0FF            BEQ              exit
  109 000000F8         
  110 000000F8         exit
  111 000000F8 F04F 0004       MOV              R0,#0x04
  112 000000FC F888 0000       STRB             R0,[R8]
  113 00000100 4770            BX               LR



ARM Macro Assembler    Page 3 


  114 00000102                 ENDP
  115 00000102 00 00           ALIGN
  116 00000104                 END
              20000500 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\convrt.d -o.\objects\convrt.o -I.\RTE\_Target_1 -IC:\
Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CM
SIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526
" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\convrt.lst CONVRT.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CONVRT 00000000

Symbol: CONVRT
   Definitions
      At line 10 in file CONVRT.s
   Uses
      At line 9 in file CONVRT.s
Comment: CONVRT used once
ascii 0000008C

Symbol: ascii
   Definitions
      At line 65 in file CONVRT.s
   Uses
      At line 49 in file CONVRT.s
      At line 63 in file CONVRT.s
      At line 94 in file CONVRT.s

check 00000064

Symbol: check
   Definitions
      At line 50 in file CONVRT.s
   Uses
      At line 58 in file CONVRT.s
Comment: check used once
check_zeros 000000E8

Symbol: check_zeros
   Definitions
      At line 101 in file CONVRT.s
   Uses
      At line 107 in file CONVRT.s
Comment: check_zeros used once
exit 000000F8

Symbol: exit
   Definitions
      At line 110 in file CONVRT.s
   Uses
      At line 105 in file CONVRT.s
      At line 108 in file CONVRT.s

fill 00000014

Symbol: fill
   Definitions
      At line 18 in file CONVRT.s
   Uses
      At line 21 in file CONVRT.s
Comment: fill used once
l_shift 00000020

Symbol: l_shift
   Definitions
      At line 24 in file CONVRT.s
   Uses
      At line 64 in file CONVRT.s
Comment: l_shift used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

lsl_mem 0000002C

Symbol: lsl_mem
   Definitions
      At line 29 in file CONVRT.s
   Uses
      At line 44 in file CONVRT.s
Comment: lsl_mem used once
my_sr 00000000

Symbol: my_sr
   Definitions
      At line 7 in file CONVRT.s
   Uses
      None
Comment: my_sr unused
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NUM 20000500

Symbol: NUM
   Definitions
      At line 4 in file CONVRT.s
   Uses
      At line 11 in file CONVRT.s
      At line 97 in file CONVRT.s

first 20000000

Symbol: first
   Definitions
      At line 1 in file CONVRT.s
   Uses
      At line 46 in file CONVRT.s
      At line 59 in file CONVRT.s
      At line 66 in file CONVRT.s

2 symbols
347 symbols in table
