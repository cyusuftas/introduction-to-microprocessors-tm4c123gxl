


ARM Macro Assembler    Page 1 


    1 00000000 400253FC 
                       GPIO_PORTF_DATA
                               EQU              0x400253fc
    2 00000000         
    3 00000000                 AREA             helperfuncs, CODE, READONLY
    4 00000000                 THUMB
    5 00000000         
    6 00000000                 EXPORT           delay_20ms
    7 00000000         delay_20ms
                               PROC
    8 00000000 F244 2540 
              F2C0 050F        MOV32            R5,#0xF4240
    9 00000008         
   10 00000008 3D01    delay   SUBS             R5,#1       ;it takes R5 as cou
                                                            nter argument     
   11 0000000A D5FD            BPL              delay
   12 0000000C         
   13 0000000C 4770            BX               LR
   14 0000000E                 ENDP
   15 0000000E         
   16 0000000E                 EXPORT           check_buttons
   17 0000000E         check_buttons
                               PROC
   18 0000000E B500            PUSH             {LR}
   19 00000010 4944            LDR              R1,=GPIO_PORTF_DATA
   20 00000012 680A            LDR              R2,[R1]
   21 00000014         check
   22 00000014 4610            MOV              R0,R2
   23 00000016 F7FF FFFE       BL               delay_20ms
   24 0000001A 680A            LDR              R2,[R1]
   25 0000001C 4282            CMP              R2,R0
   26 0000001E D1F9            BNE              check       ;if two successive 
                                                            readings are not th
                                                            e same, wait for it
                                                             to stabilize
   27 00000020 F002 0211       AND              R2,#0x11
   28 00000024 2A11            CMP              R2,#0x11
   29 00000026 D000            BEQ              check_two
   30 00000028 D102            BNE              set_func
   31 0000002A         check_two
   32 0000002A 2E01            CMP              R6,#1
   33 0000002C D006            BEQ              set
   34 0000002E D111            BNE              cont
   35 00000030         set_func
   36 00000030 2E01            CMP              R6,#1
   37 00000032 D00F            BEQ              cont
   38 00000034 BF1C 4690       MOVNE            R8,R2
   39 00000038 2601            MOVNE            R6,#1
   40 0000003A D10B            BNE              cont
   41 0000003C         set
   42 0000003C F04F 0600       MOV              R6,#0
   43 00000040 F1B8 0F10       CMP              R8,#0x10
   44 00000044 BF08 F7FF 
              FFFE             BLEQ             sw2_handler
   45 0000004A F1B8 0F01       CMP              R8,#0x01
   46 0000004E BF08 F7FF 
              FFFE             BLEQ             sw1_handler
   47 00000054         cont
   48 00000054 F85D EB04       POP              {LR}



ARM Macro Assembler    Page 2 


   49 00000058 4770            BX               LR
   50 0000005A                 ENDP
   51 0000005A         
   52 0000005A                 EXPORT           sw1_handler
   53 0000005A         sw1_handler
                               PROC
   54 0000005A E92D 41FF       PUSH             {R0,R1,R2,R3,R4,R5,R6,R7,R8,LR}
   55 0000005E                 IMPORT           st          ;import state varia
                                                            ble
   56 0000005E                 IMPORT           ships
   57 0000005E                 IMPORT           mines
   58 0000005E 4932            LDR              R1,=st
   59 00000060 7808            LDRB             R0,[R1]
   60 00000062 2800            CMP              R0,#0x00
   61 00000064 D004            BEQ              place_battleship_state
   62 00000066 2801            CMP              R0,#0x01
   63 00000068 D025            BEQ              clear_screen_state
   64 0000006A 2803            CMP              R0,#0x03
   65 0000006C D028            BEQ              place_mine_state
   66 0000006E E027            B                ending
   67 00000070         
   68 00000070         place_battleship_state
   69 00000070                 IMPORT           read_ADC
   70 00000070 F7FF FFFE       BL               read_ADC    ;read X and Y pos.
   71 00000074 461E            MOV              R6,R3
   72 00000076 4627            MOV              R7,R4
   73 00000078 F106 0608       ADD              R6,#8
   74 0000007C F107 070A       ADD              R7,#10
   75 00000080         
   76 00000080 492A            LDR              R1,=ships
   77 00000082 7808            LDRB             R0,[R1]     ;load ship count
   78 00000084 EA4F 0240       LSL              R2,R0,#1
   79 00000088 F100 0001       ADD              R0,#1
   80 0000008C 4603            MOV              R3,R0
   81 0000008E 7008            STRB             R0,[R1]
   82 00000090 F102 0201       ADD              R2,#1
   83 00000094 4411            ADD              R1,R2
   84 00000096         
   85 00000096 F046 0680       ORR              R6,#0x80    ;define ship type a
                                                            s battleship->MSB=1
                                                            
   86 0000009A F801 6B01       STRB             R6,[R1],#1
   87 0000009E 700F            STRB             R7,[R1]
   88 000000A0         
   89 000000A0 2B04            CMP              R3,#4
   90 000000A2 BF02 4920       LDREQ            R1,=st
   91 000000A6 2001            MOVEQ            R0,#0x01
   92 000000A8 7008            STRBEQ           R0,[R1]
   93 000000AA         
   94 000000AA 491E            LDR              R1,=GPIO_PORTF_DATA
   95 000000AC 6808            LDR              R0,[R1]
   96 000000AE F040 0008       ORR              R0,#0x8
   97 000000B2 6008            STR              R0,[R1]
   98 000000B4         
   99 000000B4 E004            B                ending
  100 000000B6         
  101 000000B6         clear_screen_state
  102 000000B6                 IMPORT           sf
  103 000000B6 491E            LDR              R1,=sf



ARM Macro Assembler    Page 3 


  104 000000B8 F04F 0001       MOV              R0,#0x01
  105 000000BC 7008            STRB             R0,[R1]
  106 000000BE E7FF            B                ending
  107 000000C0         
  108 000000C0         place_mine_state
  109 000000C0         
  110 000000C0         
  111 000000C0         
  112 000000C0         ending
  113 000000C0         
  114 000000C0 E8BD 41FF       POP              {R0,R1,R2,R3,R4,R5,R6,R7,R8,LR}
  115 000000C4 4770            BX               LR
  116 000000C6                 ENDP
  117 000000C6         
  118 000000C6                 EXPORT           sw2_handler
  119 000000C6         sw2_handler
                               PROC
  120 000000C6 E92D 41FF       PUSH             {R0,R1,R2,R3,R4,R5,R6,R7,R8,LR}
  121 000000CA                 IMPORT           st          ;import state varia
                                                            ble
  122 000000CA                 IMPORT           ships
  123 000000CA                 IMPORT           mines
  124 000000CA 4917            LDR              R1,=st
  125 000000CC 7808            LDRB             R0,[R1]
  126 000000CE 2800            CMP              R0,#0x00
  127 000000D0 D002            BEQ              place_civilianship_state
  128 000000D2 2802            CMP              R0,#0x02
  129 000000D4 D023            BEQ              flash_screen_state
  130 000000D6 E022            B                ending2
  131 000000D8         
  132 000000D8         place_civilianship_state
  133 000000D8                 IMPORT           read_ADC
  134 000000D8 F7FF FFFE       BL               read_ADC    ;read X and Y pos.
  135 000000DC 461E            MOV              R6,R3       ;move output of adc
                                                            
  136 000000DE 4627            MOV              R7,R4
  137 000000E0 F106 0608       ADD              R6,#8       ;add offsets
  138 000000E4 F107 070A       ADD              R7,#10
  139 000000E8         
  140 000000E8 4910            LDR              R1,=ships
  141 000000EA 7808            LDRB             R0,[R1]     ;load ship count
  142 000000EC EA4F 0240       LSL              R2,R0,#1
  143 000000F0 F100 0001       ADD              R0,#1
  144 000000F4 4603            MOV              R3,R0
  145 000000F6 7008            STRB             R0,[R1]     ;update ship count
  146 000000F8 F102 0201       ADD              R2,#1
  147 000000FC 4411            ADD              R1,R2
  148 000000FE         
  149 000000FE F026 0680       BIC              R6,#0x80    ;define ship type a
                                                            s civilianship-> MS
                                                            B=0
  150 00000102 F801 6B01       STRB             R6,[R1],#1
  151 00000106 700F            STRB             R7,[R1]
  152 00000108         
  153 00000108 2B04            CMP              R3,#4
  154 0000010A BF02 4906       LDREQ            R1,=st
  155 0000010E 2001            MOVEQ            R0,#0x01
  156 00000110 7008            STRBEQ           R0,[R1]
  157 00000112         



ARM Macro Assembler    Page 4 


  158 00000112 4904            LDR              R1,=GPIO_PORTF_DATA
  159 00000114 6808            LDR              R0,[R1]
  160 00000116 F020 0008       BIC              R0,#0x8
  161 0000011A 6008            STR              R0,[R1]
  162 0000011C         
  163 0000011C E7FF            B                ending2
  164 0000011E         
  165 0000011E         flash_screen_state
  166 0000011E         
  167 0000011E         
  168 0000011E         ending2
  169 0000011E E8BD 41FF       POP              {R0,R1,R2,R3,R4,R5,R6,R7,R8,LR}
  170 00000122 4770            BX               LR
  171 00000124                 ENDP
  172 00000124         
  173 00000124                 ALIGN
  174 00000124                 END
              400253FC 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\helper_funcs.d -o.\objects\helper_funcs.o -I.\RTE\_Ta
rget_1 -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Ke
il_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERS
ION SETA 526" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\helper_funcs.
lst helper_funcs.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

check 00000014

Symbol: check
   Definitions
      At line 21 in file helper_funcs.s
   Uses
      At line 26 in file helper_funcs.s
Comment: check used once
check_buttons 0000000E

Symbol: check_buttons
   Definitions
      At line 17 in file helper_funcs.s
   Uses
      At line 16 in file helper_funcs.s
Comment: check_buttons used once
check_two 0000002A

Symbol: check_two
   Definitions
      At line 31 in file helper_funcs.s
   Uses
      At line 29 in file helper_funcs.s
Comment: check_two used once
clear_screen_state 000000B6

Symbol: clear_screen_state
   Definitions
      At line 101 in file helper_funcs.s
   Uses
      At line 63 in file helper_funcs.s
Comment: clear_screen_state used once
cont 00000054

Symbol: cont
   Definitions
      At line 47 in file helper_funcs.s
   Uses
      At line 34 in file helper_funcs.s
      At line 37 in file helper_funcs.s
      At line 40 in file helper_funcs.s

delay 00000008

Symbol: delay
   Definitions
      At line 10 in file helper_funcs.s
   Uses
      At line 11 in file helper_funcs.s
Comment: delay used once
delay_20ms 00000000

Symbol: delay_20ms
   Definitions
      At line 7 in file helper_funcs.s
   Uses
      At line 6 in file helper_funcs.s
      At line 23 in file helper_funcs.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

ending 000000C0

Symbol: ending
   Definitions
      At line 112 in file helper_funcs.s
   Uses
      At line 66 in file helper_funcs.s
      At line 99 in file helper_funcs.s
      At line 106 in file helper_funcs.s

ending2 0000011E

Symbol: ending2
   Definitions
      At line 168 in file helper_funcs.s
   Uses
      At line 130 in file helper_funcs.s
      At line 163 in file helper_funcs.s

flash_screen_state 0000011E

Symbol: flash_screen_state
   Definitions
      At line 165 in file helper_funcs.s
   Uses
      At line 129 in file helper_funcs.s
Comment: flash_screen_state used once
helperfuncs 00000000

Symbol: helperfuncs
   Definitions
      At line 3 in file helper_funcs.s
   Uses
      None
Comment: helperfuncs unused
place_battleship_state 00000070

Symbol: place_battleship_state
   Definitions
      At line 68 in file helper_funcs.s
   Uses
      At line 61 in file helper_funcs.s
Comment: place_battleship_state used once
place_civilianship_state 000000D8

Symbol: place_civilianship_state
   Definitions
      At line 132 in file helper_funcs.s
   Uses
      At line 127 in file helper_funcs.s
Comment: place_civilianship_state used once
place_mine_state 000000C0

Symbol: place_mine_state
   Definitions
      At line 108 in file helper_funcs.s
   Uses
      At line 65 in file helper_funcs.s
Comment: place_mine_state used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

set 0000003C

Symbol: set
   Definitions
      At line 41 in file helper_funcs.s
   Uses
      At line 33 in file helper_funcs.s
Comment: set used once
set_func 00000030

Symbol: set_func
   Definitions
      At line 35 in file helper_funcs.s
   Uses
      At line 30 in file helper_funcs.s
Comment: set_func used once
sw1_handler 0000005A

Symbol: sw1_handler
   Definitions
      At line 53 in file helper_funcs.s
   Uses
      At line 46 in file helper_funcs.s
      At line 52 in file helper_funcs.s

sw2_handler 000000C6

Symbol: sw2_handler
   Definitions
      At line 119 in file helper_funcs.s
   Uses
      At line 44 in file helper_funcs.s
      At line 118 in file helper_funcs.s

18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTF_DATA 400253FC

Symbol: GPIO_PORTF_DATA
   Definitions
      At line 1 in file helper_funcs.s
   Uses
      At line 19 in file helper_funcs.s
      At line 94 in file helper_funcs.s
      At line 158 in file helper_funcs.s

1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

mines 00000000

Symbol: mines
   Definitions
      At line 57 in file helper_funcs.s
      At line 123 in file helper_funcs.s
   Uses
      None
Warning: mines multiply definedComment: mines unused
read_ADC 00000000

Symbol: read_ADC
   Definitions
      At line 69 in file helper_funcs.s
      At line 133 in file helper_funcs.s
   Uses
      At line 70 in file helper_funcs.s
      At line 134 in file helper_funcs.s
Warning: read_ADC multiply defined
sf 00000000

Symbol: sf
   Definitions
      At line 102 in file helper_funcs.s
   Uses
      At line 103 in file helper_funcs.s
Comment: sf used once
ships 00000000

Symbol: ships
   Definitions
      At line 56 in file helper_funcs.s
      At line 122 in file helper_funcs.s
   Uses
      At line 76 in file helper_funcs.s
      At line 140 in file helper_funcs.s
Warning: ships multiply defined
st 00000000

Symbol: st
   Definitions
      At line 55 in file helper_funcs.s
      At line 121 in file helper_funcs.s
   Uses
      At line 58 in file helper_funcs.s
      At line 90 in file helper_funcs.s
      At line 124 in file helper_funcs.s
      At line 154 in file helper_funcs.s
Warning: st multiply defined
5 symbols
360 symbols in table
