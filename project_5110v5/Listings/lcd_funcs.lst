


ARM Macro Assembler    Page 1 


    1 00000000 400043FC 
                       GPIO_PORTA_DATA
                               EQU              0x400043FC
    2 00000000 4000800C 
                       SSISR   EQU              0x4000800C
    3 00000000 40008008 
                       SSIDR   EQU              0x40008008
    4 00000000         
    5 00000000 00000080 
                       x_addr  EQU              0x80        ;x6-x5-x4-x3-x2-x1-
                                                            x0 (0<=x<=83)
    6 00000000 00000040 
                       y_addr  EQU              0x40        ;y2-y1-y0 (0<=y<=5)
                                                            
    7 00000000         
    8 00000000                 AREA             lcdfuncs, CODE, READONLY
    9 00000000                 THUMB
   10 00000000         
   11 00000000                 EXPORT           lcdWriteCmd
   12 00000000         lcdWriteCmd
                               PROC
   13 00000000 B403            PUSH             {R0,R1}
   14 00000002         
   15 00000002 4923            LDR              R1,=SSISR
   16 00000004         check_busy
   17 00000004 6808            LDR              R0,[R1]
   18 00000006 F000 0010       AND              R0,#0x10    ;check if ssi0 is b
                                                            usy or not
   19 0000000A 2810            CMP              R0,#0x10
   20 0000000C D0FA            BEQ              check_busy
   21 0000000E         
   22 0000000E 4921            LDR              R1,=GPIO_PORTA_DATA
   23 00000010 6808            LDR              R0,[R1]
   24 00000012 F020 0040       BIC              R0,#0x40    ;command (pa6-> low
                                                            )
   25 00000016 6008            STR              R0,[R1]
   26 00000018         
   27 00000018 491F            LDR              R1,=SSIDR
   28 0000001A 4628            MOV              R0,R5       ;r5 is the argument
                                                             whichs shows the c
                                                            ommand to be writte
                                                            n
   29 0000001C 6008            STR              R0,[R1]
   30 0000001E         
   31 0000001E 491C            LDR              R1,=SSISR
   32 00000020         check_busy2
   33 00000020 6808            LDR              R0,[R1]
   34 00000022 F000 0010       AND              R0,#0x10    ;check if ssi0 is b
                                                            usy or not
   35 00000026 2810            CMP              R0,#0x10
   36 00000028 D0FA            BEQ              check_busy2
   37 0000002A         
   38 0000002A BC03            POP              {R0,R1}
   39 0000002C 4770            BX               LR
   40 0000002E                 ENDP
   41 0000002E         
   42 0000002E                 EXPORT           lcdWriteData
   43 0000002E         lcdWriteData
                               PROC



ARM Macro Assembler    Page 2 


   44 0000002E B403            PUSH             {R0,R1}
   45 00000030         
   46 00000030 4917            LDR              R1,=SSISR
   47 00000032         wait_tnf
   48 00000032 6808            LDR              R0,[R1]
   49 00000034 F000 0002       AND              R0,#2
   50 00000038 2802            CMP              R0,#2
   51 0000003A D1FA            BNE              wait_tnf
   52 0000003C         
   53 0000003C 4915            LDR              R1,=GPIO_PORTA_DATA
   54 0000003E 6808            LDR              R0,[R1]
   55 00000040 F040 0040       ORR              R0,#0x40    ;dc-> high (data is
                                                             going to be writte
                                                            n)
   56 00000044 6008            STR              R0,[R1]
   57 00000046         
   58 00000046 4914            LDR              R1,=SSIDR
   59 00000048 4628            MOV              R0,R5
   60 0000004A 6008            STR              R0,[R1]
   61 0000004C         
   62 0000004C BC03            POP              {R0,R1}
   63 0000004E 4770            BX               LR
   64 00000050                 ENDP
   65 00000050         
   66 00000050                 EXPORT           clearLcdScreen
   67 00000050         clearLcdScreen
                               PROC
   68 00000050 B524            PUSH             {R2,R5,LR}
   69 00000052 F240 12F8 
              F2C0 0200        MOV32            R2,#0x1F8   ;84*6= 504 (0x1f8) 
                                                            clear all the pixel
                                                            s in screen by writ
                                                            ing 0 to
   70 0000005A F04F 0500       MOV              R5,#0x00    ;all addressable by
                                                            tes.
   71 0000005E         write
   72 0000005E F7FF FFFE       BL               lcdWriteData
   73 00000062 F1A2 0201       SUB              R2,#1
   74 00000066 2A00            CMP              R2,#0
   75 00000068 D1F9            BNE              write
   76 0000006A         
   77 0000006A E8BD 4024       POP              {R2,R5,LR}
   78 0000006E 4770            BX               LR
   79 00000070                 ENDP
   80 00000070         
   81 00000070                 EXPORT           setCursor
   82 00000070         setCursor
                               PROC
   83 00000070 B501            PUSH             {R0,LR}
   84 00000072 F04F 0580       LDR              R5,=x_addr  ;set cursor positio
                                                            n
   85 00000076 EA45 0506       ORR              R5,R6
   86 0000007A F7FF FFFE       BL               lcdWriteCmd
   87 0000007E F04F 0540       LDR              R5,=y_addr
   88 00000082 EA45 0507       ORR              R5,R7
   89 00000086 F7FF FFFE       BL               lcdWriteCmd
   90 0000008A E8BD 4001       POP              {R0,LR}
   91 0000008E 4770            BX               LR
   92 00000090                 ENDP



ARM Macro Assembler    Page 3 


   93 00000090         
   94 00000090                 ALIGN
   95 00000090                 END
              4000800C 
              400043FC 
              40008008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\lcd_funcs.d -o.\objects\lcd_funcs.o -I.\RTE\_Target_1
 -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\
ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SE
TA 526" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\lcd_funcs.lst lcd_f
uncs.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

check_busy 00000004

Symbol: check_busy
   Definitions
      At line 16 in file lcd_funcs.s
   Uses
      At line 20 in file lcd_funcs.s
Comment: check_busy used once
check_busy2 00000020

Symbol: check_busy2
   Definitions
      At line 32 in file lcd_funcs.s
   Uses
      At line 36 in file lcd_funcs.s
Comment: check_busy2 used once
clearLcdScreen 00000050

Symbol: clearLcdScreen
   Definitions
      At line 67 in file lcd_funcs.s
   Uses
      At line 66 in file lcd_funcs.s
Comment: clearLcdScreen used once
lcdWriteCmd 00000000

Symbol: lcdWriteCmd
   Definitions
      At line 12 in file lcd_funcs.s
   Uses
      At line 11 in file lcd_funcs.s
      At line 86 in file lcd_funcs.s
      At line 89 in file lcd_funcs.s

lcdWriteData 0000002E

Symbol: lcdWriteData
   Definitions
      At line 43 in file lcd_funcs.s
   Uses
      At line 42 in file lcd_funcs.s
      At line 72 in file lcd_funcs.s

lcdfuncs 00000000

Symbol: lcdfuncs
   Definitions
      At line 8 in file lcd_funcs.s
   Uses
      None
Comment: lcdfuncs unused
setCursor 00000070

Symbol: setCursor
   Definitions
      At line 82 in file lcd_funcs.s
   Uses
      At line 81 in file lcd_funcs.s
Comment: setCursor used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

wait_tnf 00000032

Symbol: wait_tnf
   Definitions
      At line 47 in file lcd_funcs.s
   Uses
      At line 51 in file lcd_funcs.s
Comment: wait_tnf used once
write 0000005E

Symbol: write
   Definitions
      At line 71 in file lcd_funcs.s
   Uses
      At line 75 in file lcd_funcs.s
Comment: write used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_DATA 400043FC

Symbol: GPIO_PORTA_DATA
   Definitions
      At line 1 in file lcd_funcs.s
   Uses
      At line 22 in file lcd_funcs.s
      At line 53 in file lcd_funcs.s

SSIDR 40008008

Symbol: SSIDR
   Definitions
      At line 3 in file lcd_funcs.s
   Uses
      At line 27 in file lcd_funcs.s
      At line 58 in file lcd_funcs.s

SSISR 4000800C

Symbol: SSISR
   Definitions
      At line 2 in file lcd_funcs.s
   Uses
      At line 15 in file lcd_funcs.s
      At line 31 in file lcd_funcs.s
      At line 46 in file lcd_funcs.s

x_addr 00000080

Symbol: x_addr
   Definitions
      At line 5 in file lcd_funcs.s
   Uses
      At line 84 in file lcd_funcs.s
Comment: x_addr used once
y_addr 00000040

Symbol: y_addr
   Definitions
      At line 6 in file lcd_funcs.s
   Uses
      At line 87 in file lcd_funcs.s
Comment: y_addr used once
5 symbols
350 symbols in table
