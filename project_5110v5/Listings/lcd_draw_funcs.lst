


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             lcd_dfuncs, CODE, READONLY
    2 00000000                 THUMB
    3 00000000         
    4 00000000                 IMPORT           lcdWriteData
    5 00000000                 IMPORT           setCursor
    6 00000000         
    7 00000000                 EXPORT           lcdDrawCursor
    8 00000000         lcdDrawCursor
                               PROC                         ;it takes R8(x pos)
                                                             and R9(y pos) as a
                                                            rguments
    9 00000000 E92D 5FE5       PUSH             {R0,R2,R5,R6,R7,R8,R9,R10,R11,R
12,LR}
   10 00000004         
   11 00000004 F108 0808       ADD              R8,#8       ;offsets
   12 00000008 F109 090A       ADD              R9,#10
   13 0000000C         
   14 0000000C         
   15 0000000C F04F 0B08       MOV              R11,#8
   16 00000010 FBB9 FAFB       UDIV             R10,R9,R11  ;R10 = R9/R11, R9->
                                                             y position (betwee
                                                            n 0 and 83)
   17 00000014 FB0A 9C1B       MLS              R12,R10,R11,R9 ;R12 = R9 - R10*
                                                            R11, remanent
   18 00000018         
   19 00000018 F1BC 0F01       CMP              R12,#1
   20 0000001C D301            BLO              draw_upper
   21 0000001E D00A            BEQ              draw_upper2
   22 00000020 D813            BHI              cont
   23 00000022         draw_upper
   24 00000022 4646            MOV              R6,R8
   25 00000024 F1AA 0701       SUB              R7,R10,#1
   26 00000028 F7FF FFFE       BL               setCursor
   27 0000002C F04F 05C0       MOV              R5,#0xC0
   28 00000030 F7FF FFFE       BL               lcdWriteData
   29 00000034 E009            B                cont
   30 00000036         draw_upper2
   31 00000036 4646            MOV              R6,R8
   32 00000038 F1AA 0701       SUB              R7,R10,#1
   33 0000003C F7FF FFFE       BL               setCursor
   34 00000040 F04F 0580       MOV              R5,#0x80
   35 00000044 F7FF FFFE       BL               lcdWriteData
   36 00000048 E7FF            B                cont
   37 0000004A         cont
   38 0000004A F1A8 0602       SUB              R6,R8,#2
   39 0000004E 4657            MOV              R7,R10
   40 00000050 F7FF FFFE       BL               setCursor
   41 00000054 F04F 0001       MOV              R0,#1
   42 00000058 FA00 F50C       LSL              R5,R0,R12
   43 0000005C F7FF FFFE       BL               lcdWriteData
   44 00000060 F7FF FFFE       BL               lcdWriteData
   45 00000064 F04F 0004       MOV              R0,#4
   46 00000068 F04F 057C       MOV              R5,#0x7c
   47 0000006C 4584            CMP              R12,R0
   48 0000006E BF99 EBA0 
              020C             SUBLS            R2,R0,R12
   49 00000074 40D5            LSRLS            R5,R2
   50 00000076 EBAC 0200       SUBHI            R2,R12,R0
   51 0000007A 4095            LSLHI            R5,R2



ARM Macro Assembler    Page 2 


   52 0000007C F005 05FF       AND              R5,#0xFF
   53 00000080 F7FF FFFE       BL               lcdWriteData
   54 00000084 F108 0601       ADD              R6,R8,#1
   55 00000088 4657            MOV              R7,R10
   56 0000008A F7FF FFFE       BL               setCursor
   57 0000008E F04F 0001       MOV              R0,#1
   58 00000092 FA00 F50C       LSL              R5,R0,R12
   59 00000096 F7FF FFFE       BL               lcdWriteData
   60 0000009A F7FF FFFE       BL               lcdWriteData
   61 0000009E F1BC 0F06       CMP              R12,#6
   62 000000A2 D001            BEQ              draw_lower
   63 000000A4 D80A            BHI              draw_lower1
   64 000000A6 D312            BLO              cont2
   65 000000A8         draw_lower
   66 000000A8 4646            MOV              R6,R8
   67 000000AA F10A 0701       ADD              R7,R10,#1
   68 000000AE F7FF FFFE       BL               setCursor
   69 000000B2 F04F 0501       MOV              R5,#0x01
   70 000000B6 F7FF FFFE       BL               lcdWriteData
   71 000000BA E008            B                cont2
   72 000000BC         draw_lower1
   73 000000BC 4646            MOV              R6,R8
   74 000000BE F10A 0701       ADD              R7,R10,#1
   75 000000C2 F7FF FFFE       BL               setCursor
   76 000000C6 F04F 0503       MOV              R5,#0x03
   77 000000CA F7FF FFFE       BL               lcdWriteData
   78 000000CE         ;B  cont2
   79 000000CE         cont2
   80 000000CE         ;  MOV  R5,#0xFF
   81 000000CE         ;  BL  lcdWriteData
   82 000000CE         ;  MOV  R5,#0xFF
   83 000000CE         ;  BL  lcdWriteData
   84 000000CE E8BD 5FE5       POP              {R0,R2,R5,R6,R7,R8,R9,R10,R11,R
12,LR}
   85 000000D2 4770            BX               LR
   86 000000D4                 ENDP
   87 000000D4         
   88 000000D4                 EXPORT           lcdDrawNum
   89 000000D4         lcdDrawNum
                               PROC
   90 000000D4 B507            PUSH             {R0,R1,R2,LR}
   91 000000D6                 IMPORT           num_0
   92 000000D6 49A6            LDR              R1,=num_0
   93 000000D8 F04F 0005       MOV              R0,#5
   94 000000DC FB00 F005       MUL              R0,R5
   95 000000E0 F04F 0200       MOV              R2,#0
   96 000000E4 F7FF FFFE       BL               setCursor   ;R6 and R7 is provi
                                                            ded as inputs(X and
                                                             Y address)
   97 000000E8         write_num
   98 000000E8 5C0D            LDRB             R5,[R1,R0]
   99 000000EA F7FF FFFE       BL               lcdWriteData
  100 000000EE F100 0001       ADD              R0,#1
  101 000000F2 F102 0201       ADD              R2,#1
  102 000000F6 2A05            CMP              R2,#5
  103 000000F8 D1F6            BNE              write_num
  104 000000FA F04F 0200       MOV              R2,#0
  105 000000FE         
  106 000000FE E8BD 4007       POP              {R0,R1,R2,LR}



ARM Macro Assembler    Page 3 


  107 00000102 4770            BX               LR
  108 00000104                 ENDP
  109 00000104         
  110 00000104                 EXPORT           lcdDrawXY   ;takes R8 and R9 as
                                                             input parameter: X
                                                             and Y addresses
  111 00000104         lcdDrawXY
                               PROC
  112 00000104 E92D 5BE3       PUSH             {R0,R1,R5,R6,R7,R8,R9,R11,R12,L
R}
  113 00000108                 IMPORT           X
  114 00000108                 IMPORT           Y
  115 00000108                 IMPORT           colon
  116 00000108 F8DF B268       LDR              R11,=X
  117 0000010C F04F 0600       MOV              R6,#0       ;set cursor to 0,0
  118 00000110 F04F 0700       MOV              R7,#0
  119 00000114 F7FF FFFE       BL               setCursor
  120 00000118 F7FF FFFE       BL               lcdDrawChar
  121 0000011C F8DF B258       LDR              R11,=colon
  122 00000120 F04F 0605       MOV              R6,#5       ;set cursor to 5,0
  123 00000124 F04F 0700       MOV              R7,#0
  124 00000128 F7FF FFFE       BL               setCursor
  125 0000012C F7FF FFFE       BL               lcdDrawChar
  126 00000130 F108 0809       ADD              R8,#9
  127 00000134 F109 090B       ADD              R9,#11
  128 00000138 F04F 000A       MOV              R0,#10
  129 0000013C FBB8 F1F0       UDIV             R1,R8,R0
  130 00000140 FB01 8510       MLS              R5,R1,R0,R8 ;find digits
  131 00000144 F04F 060F       MOV              R6,#15      ;set where to print
                                                             number
  132 00000148 F04F 0700       MOV              R7,#0
  133 0000014C F7FF FFFE       BL               lcdDrawNum
  134 00000150 FBB1 FCF0       UDIV             R12,R1,R0
  135 00000154 FB0C 1510       MLS              R5,R12,R0,R1
  136 00000158 F04F 060A       MOV              R6,#10      ;set where to print
                                                             number
  137 0000015C F04F 0700       MOV              R7,#0
  138 00000160 F7FF FFFE       BL               lcdDrawNum
  139 00000164         
  140 00000164 F8DF B214       LDR              R11,=Y
  141 00000168 F04F 0623       MOV              R6,#35      ;set cursor to 35,0
                                                            
  142 0000016C F04F 0700       MOV              R7,#0
  143 00000170 F7FF FFFE       BL               setCursor
  144 00000174 F7FF FFFE       BL               lcdDrawChar
  145 00000178 F8DF B1FC       LDR              R11,=colon
  146 0000017C F04F 0628       MOV              R6,#40      ;set cursor to 50,0
                                                            
  147 00000180 F04F 0700       MOV              R7,#0
  148 00000184 F7FF FFFE       BL               setCursor
  149 00000188 F7FF FFFE       BL               lcdDrawChar
  150 0000018C FBB9 F1F0       UDIV             R1,R9,R0
  151 00000190 FB01 9510       MLS              R5,R1,R0,R9 ;find digits
  152 00000194 F04F 0632       MOV              R6,#50      ;set where to print
                                                             number
  153 00000198 F04F 0700       MOV              R7,#0
  154 0000019C F7FF FFFE       BL               lcdDrawNum
  155 000001A0 FBB1 FCF0       UDIV             R12,R1,R0
  156 000001A4 FB0C 1510       MLS              R5,R12,R0,R1



ARM Macro Assembler    Page 4 


  157 000001A8 F04F 062D       MOV              R6,#45      ;set where to print
                                                             number
  158 000001AC F04F 0700       MOV              R7,#0
  159 000001B0 F7FF FFFE       BL               lcdDrawNum
  160 000001B4         
  161 000001B4 E8BD 5BE3       POP              {R0,R1,R5,R6,R7,R8,R9,R11,R12,L
R}
  162 000001B8 4770            BX               LR
  163 000001BA                 ENDP
  164 000001BA         
  165 000001BA                 EXPORT           lcdDrawChar ;Expects the starti
                                                            ng memory location 
                                                            of character as inp
                                                            ut in R11
  166 000001BA         lcdDrawChar
                               PROC
  167 000001BA B524            PUSH             {R2,R5,LR}
  168 000001BC F04F 0200       MOV              R2,#0
  169 000001C0         write_char
  170 000001C0 F81B 5002       LDRB             R5,[R11,R2]
  171 000001C4 F7FF FFFE       BL               lcdWriteData
  172 000001C8 F102 0201       ADD              R2,#1
  173 000001CC 2A05            CMP              R2,#5
  174 000001CE D1F7            BNE              write_char
  175 000001D0 F04F 0200       MOV              R2,#0
  176 000001D4         
  177 000001D4         
  178 000001D4 E8BD 4024       POP              {R2,R5,LR}
  179 000001D8 4770            BX               LR
  180 000001DA                 ENDP
  181 000001DA         
  182 000001DA                 EXPORT           lcdDrawRemainingTime
  183 000001DA         lcdDrawRemainingTime
                               PROC
  184 000001DA E92D 50FF       PUSH             {R0,R1,R2,R3,R4,R5,R6,R7,R12,LR
}
  185 000001DE                 IMPORT           TIMER0_TAV
  186 000001DE 4968            LDR              R1,=TIMER0_TAV
  187 000001E0 6808            LDR              R0,[R1]
  188 000001E2 F24F 0380 
              F2C0 23FA        MOV32            R3,#0x2FAF080
  189 000001EA F04F 040A       MOV              R4,#10
  190 000001EE FBB0 F2F3       UDIV             R2,R0,R3
  191 000001F2 FBB2 F0F4       UDIV             R0,R2,R4
  192 000001F6 FB00 2514       MLS              R5,R0,R4,R2
  193 000001FA F04F 064E       MOV              R6,#78      ;X 
  194 000001FE F04F 0700       MOV              R7,#0       ;Y
  195 00000202 F7FF FFFE       BL               lcdDrawNum
  196 00000206         
  197 00000206 4605            MOV              R5,R0
  198 00000208 F04F 0648       MOV              R6,#72
  199 0000020C F04F 0700       MOV              R7,#0
  200 00000210 F7FF FFFE       BL               lcdDrawNum
  201 00000214         
  202 00000214 E8BD 50FF       POP              {R0,R1,R2,R3,R4,R5,R6,R7,R12,LR
}
  203 00000218 4770            BX               LR
  204 0000021A                 ENDP
  205 0000021A         



ARM Macro Assembler    Page 5 


  206 0000021A                 EXPORT           lcdDrawBattleship ;R6:X address
                                                            , R7:Y address. X,Y
                                                             represents top lef
                                                            t of the ship 
  207 0000021A         lcdDrawBattleship
                               PROC
  208 0000021A B5FF            PUSH             {R0,R1,R2,R3,R4,R5,R6,R7,LR}
  209 0000021C         ;MOV  R6,#23
  210 0000021C         ;MOV  R7,#27
  211 0000021C 2E09            CMP              R6,#9
  212 0000021E D33F            BLO              ending
  213 00000220 2E44            CMP              R6,#68
  214 00000222 D83D            BHI              ending
  215 00000224 2F08            CMP              R7,#8
  216 00000226 D33B            BLO              ending
  217 00000228 2F28            CMP              R7,#40
  218 0000022A D839            BHI              ending
  219 0000022C F04F 0008       MOV              R0,#8
  220 00000230 FBB7 F1F0       UDIV             R1,R7,R0
  221 00000234 FB00 7211       MLS              R2,R0,R1,R7
  222 00000238 F04F 03FF       MOV              R3,#0xFF
  223 0000023C 460F            MOV              R7,R1       ;set Y address
  224 0000023E F7FF FFFE       BL               setCursor
  225 00000242 2A00            CMP              R2,#0
  226 00000244 D01A            BEQ              draw_5
  227 00000246 EBA0 0402       SUB              R4,R0,R2
  228 0000024A FA03 F302       LSL              R3,R2
  229 0000024E F003 05FF       AND              R5,R3,#0xFF
  230 00000252 F04F 0008       MOV              R0,#8
  231 00000256         draw_1
  232 00000256 F7FF FFFE       BL               lcdWriteData
  233 0000025A 3801            SUBS             R0,#1
  234 0000025C D1FB            BNE              draw_1
  235 0000025E F04F 0008       MOV              R0,#8
  236 00000262         
  237 00000262 F107 0701       ADD              R7,#1
  238 00000266 F7FF FFFE       BL               setCursor
  239 0000026A F04F 03FF       MOV              R3,#0xFF
  240 0000026E FA23 F504       LSR              R5,R3,R4
  241 00000272         draw_2
  242 00000272 F7FF FFFE       BL               lcdWriteData
  243 00000276 3801            SUBS             R0,#1
  244 00000278 D1FB            BNE              draw_2
  245 0000027A E011            B                ending
  246 0000027C         draw_5
  247 0000027C F04F 05FF       MOV              R5,#0xFF
  248 00000280 F7FF FFFE       BL               lcdWriteData
  249 00000284 F7FF FFFE       BL               lcdWriteData
  250 00000288 F7FF FFFE       BL               lcdWriteData
  251 0000028C F7FF FFFE       BL               lcdWriteData
  252 00000290 F7FF FFFE       BL               lcdWriteData
  253 00000294 F7FF FFFE       BL               lcdWriteData
  254 00000298 F7FF FFFE       BL               lcdWriteData
  255 0000029C F7FF FFFE       BL               lcdWriteData
  256 000002A0         ending
  257 000002A0 E8BD 40FF       POP              {R0,R1,R2,R3,R4,R5,R6,R7,LR}
  258 000002A4 4770            BX               LR
  259 000002A6                 ENDP
  260 000002A6         



ARM Macro Assembler    Page 6 


  261 000002A6                 EXPORT           lcdDrawCivilianship
  262 000002A6         lcdDrawCivilianship
                               PROC
  263 000002A6 B5FF            PUSH             {R0,R1,R2,R3,R4,R5,R6,R7,LR}
  264 000002A8         ;MOV  R6,#12
  265 000002A8         ;MOV  R7,#28
  266 000002A8 2E09            CMP              R6,#9
  267 000002AA D33F            BLO              ending2
  268 000002AC 2E44            CMP              R6,#68
  269 000002AE D83D            BHI              ending2
  270 000002B0 2F08            CMP              R7,#8
  271 000002B2 D33B            BLO              ending2
  272 000002B4 2F28            CMP              R7,#40
  273 000002B6 D839            BHI              ending2
  274 000002B8 F04F 0008       MOV              R0,#8
  275 000002BC FBB7 F1F0       UDIV             R1,R7,R0
  276 000002C0 FB00 7211       MLS              R2,R0,R1,R7
  277 000002C4 F04F 03AA       MOV              R3,#0xaa
  278 000002C8 460F            MOV              R7,R1       ;set Y address
  279 000002CA F7FF FFFE       BL               setCursor
  280 000002CE 2A00            CMP              R2,#0
  281 000002D0 D01A            BEQ              draw_6
  282 000002D2 EBA0 0402       SUB              R4,R0,R2
  283 000002D6 FA03 F302       LSL              R3,R2
  284 000002DA F003 05FF       AND              R5,R3,#0xFF
  285 000002DE F04F 0008       MOV              R0,#8
  286 000002E2         draw_3
  287 000002E2 F7FF FFFE       BL               lcdWriteData
  288 000002E6 3801            SUBS             R0,#1
  289 000002E8 D1FB            BNE              draw_3
  290 000002EA F04F 0008       MOV              R0,#8
  291 000002EE         
  292 000002EE F107 0701       ADD              R7,#1
  293 000002F2 F7FF FFFE       BL               setCursor
  294 000002F6 F04F 03AA       MOV              R3,#0xaa
  295 000002FA FA23 F504       LSR              R5,R3,R4
  296 000002FE         draw_4
  297 000002FE F7FF FFFE       BL               lcdWriteData
  298 00000302 3801            SUBS             R0,#1
  299 00000304 D1FB            BNE              draw_4
  300 00000306 E011            B                ending2
  301 00000308         draw_6
  302 00000308 F04F 05AA       MOV              R5,#0xaa
  303 0000030C F7FF FFFE       BL               lcdWriteData
  304 00000310 F7FF FFFE       BL               lcdWriteData
  305 00000314 F7FF FFFE       BL               lcdWriteData
  306 00000318 F7FF FFFE       BL               lcdWriteData
  307 0000031C F7FF FFFE       BL               lcdWriteData
  308 00000320 F7FF FFFE       BL               lcdWriteData
  309 00000324 F7FF FFFE       BL               lcdWriteData
  310 00000328 F7FF FFFE       BL               lcdWriteData
  311 0000032C         ending2
  312 0000032C E8BD 40FF       POP              {R0,R1,R2,R3,R4,R5,R6,R7,LR}
  313 00000330 4770            BX               LR
  314 00000332                 ENDP
  315 00000332         
  316 00000332                 EXPORT           lcdDrawShips
  317 00000332         lcdDrawShips
                               PROC



ARM Macro Assembler    Page 7 


  318 00000332 B5CF            PUSH             {R0,R1,R2,R3,R6,R7,LR}
  319 00000334                 IMPORT           ships
  320 00000334 4913            LDR              R1,=ships
  321 00000336 7808            LDRB             R0,[R1]     ;load number of shi
                                                            ps
  322 00000338 4602            MOV              R2,R0       ;R2 holds the ship 
                                                            count
  323 0000033A F101 0101       ADD              R1,#1       ;points to the firs
                                                            t ship's X address
  324 0000033E         
  325 0000033E 2A00            CMP              R2,#0
  326 00000340 D012            BEQ              ending3     ;if ship count=0, q
                                                            uit without drawing
                                                             anything
  327 00000342         
  328 00000342         draw_ships
  329 00000342 F811 6B01       LDRB             R6,[R1],#1
  330 00000346 F006 067F       AND              R6,#0x7F    ;delete the bit whi
                                                            ch represent the ty
                                                            pe of ship
  331 0000034A F811 7901       LDRB             R7,[R1],#-1 ;R6 and R7 holds th
                                                            e X and Y pos. of t
                                                            he ship
  332 0000034E         
  333 0000034E 7808            LDRB             R0,[R1]     ;check type of the 
                                                            ship
  334 00000350 F010 0380       ANDS             R3,R0,#0x80
  335 00000354 BF08 F7FF 
              FFFE             BLEQ             lcdDrawCivilianship
  336 0000035A BF18 F7FF 
              FFFE             BLNE             lcdDrawBattleship
  337 00000360         
  338 00000360 3A01            SUBS             R2,#1
  339 00000362 BF18 3102       ADDNE            R1,#2
  340 00000366 D1EC            BNE              draw_ships
  341 00000368         
  342 00000368         ending3
  343 00000368 E8BD 40CF       POP              {R0,R1,R2,R3,R6,R7,LR}
  344 0000036C 4770            BX               LR
  345 0000036E                 ENDP
  346 0000036E         
  347 0000036E 00 00           ALIGN
  348 00000370                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\lcd_draw_funcs.d -o.\objects\lcd_draw_funcs.o -I.\RTE
\_Target_1 -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC
:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_
VERSION SETA 526" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\lcd_draw_
funcs.lst lcd_draw_funcs.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

cont 0000004A

Symbol: cont
   Definitions
      At line 37 in file lcd_draw_funcs.s
   Uses
      At line 22 in file lcd_draw_funcs.s
      At line 29 in file lcd_draw_funcs.s
      At line 36 in file lcd_draw_funcs.s

cont2 000000CE

Symbol: cont2
   Definitions
      At line 79 in file lcd_draw_funcs.s
   Uses
      At line 64 in file lcd_draw_funcs.s
      At line 71 in file lcd_draw_funcs.s

draw_1 00000256

Symbol: draw_1
   Definitions
      At line 231 in file lcd_draw_funcs.s
   Uses
      At line 234 in file lcd_draw_funcs.s
Comment: draw_1 used once
draw_2 00000272

Symbol: draw_2
   Definitions
      At line 241 in file lcd_draw_funcs.s
   Uses
      At line 244 in file lcd_draw_funcs.s
Comment: draw_2 used once
draw_3 000002E2

Symbol: draw_3
   Definitions
      At line 286 in file lcd_draw_funcs.s
   Uses
      At line 289 in file lcd_draw_funcs.s
Comment: draw_3 used once
draw_4 000002FE

Symbol: draw_4
   Definitions
      At line 296 in file lcd_draw_funcs.s
   Uses
      At line 299 in file lcd_draw_funcs.s
Comment: draw_4 used once
draw_5 0000027C

Symbol: draw_5
   Definitions
      At line 246 in file lcd_draw_funcs.s
   Uses
      At line 226 in file lcd_draw_funcs.s
Comment: draw_5 used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

draw_6 00000308

Symbol: draw_6
   Definitions
      At line 301 in file lcd_draw_funcs.s
   Uses
      At line 281 in file lcd_draw_funcs.s
Comment: draw_6 used once
draw_lower 000000A8

Symbol: draw_lower
   Definitions
      At line 65 in file lcd_draw_funcs.s
   Uses
      At line 62 in file lcd_draw_funcs.s
Comment: draw_lower used once
draw_lower1 000000BC

Symbol: draw_lower1
   Definitions
      At line 72 in file lcd_draw_funcs.s
   Uses
      At line 63 in file lcd_draw_funcs.s
Comment: draw_lower1 used once
draw_ships 00000342

Symbol: draw_ships
   Definitions
      At line 328 in file lcd_draw_funcs.s
   Uses
      At line 340 in file lcd_draw_funcs.s
Comment: draw_ships used once
draw_upper 00000022

Symbol: draw_upper
   Definitions
      At line 23 in file lcd_draw_funcs.s
   Uses
      At line 20 in file lcd_draw_funcs.s
Comment: draw_upper used once
draw_upper2 00000036

Symbol: draw_upper2
   Definitions
      At line 30 in file lcd_draw_funcs.s
   Uses
      At line 21 in file lcd_draw_funcs.s
Comment: draw_upper2 used once
ending 000002A0

Symbol: ending
   Definitions
      At line 256 in file lcd_draw_funcs.s
   Uses
      At line 212 in file lcd_draw_funcs.s
      At line 214 in file lcd_draw_funcs.s
      At line 216 in file lcd_draw_funcs.s
      At line 218 in file lcd_draw_funcs.s
      At line 245 in file lcd_draw_funcs.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


ending2 0000032C

Symbol: ending2
   Definitions
      At line 311 in file lcd_draw_funcs.s
   Uses
      At line 267 in file lcd_draw_funcs.s
      At line 269 in file lcd_draw_funcs.s
      At line 271 in file lcd_draw_funcs.s
      At line 273 in file lcd_draw_funcs.s
      At line 300 in file lcd_draw_funcs.s

ending3 00000368

Symbol: ending3
   Definitions
      At line 342 in file lcd_draw_funcs.s
   Uses
      At line 326 in file lcd_draw_funcs.s
Comment: ending3 used once
lcdDrawBattleship 0000021A

Symbol: lcdDrawBattleship
   Definitions
      At line 207 in file lcd_draw_funcs.s
   Uses
      At line 206 in file lcd_draw_funcs.s
      At line 336 in file lcd_draw_funcs.s

lcdDrawChar 000001BA

Symbol: lcdDrawChar
   Definitions
      At line 166 in file lcd_draw_funcs.s
   Uses
      At line 120 in file lcd_draw_funcs.s
      At line 125 in file lcd_draw_funcs.s
      At line 144 in file lcd_draw_funcs.s
      At line 149 in file lcd_draw_funcs.s
      At line 165 in file lcd_draw_funcs.s

lcdDrawCivilianship 000002A6

Symbol: lcdDrawCivilianship
   Definitions
      At line 262 in file lcd_draw_funcs.s
   Uses
      At line 261 in file lcd_draw_funcs.s
      At line 335 in file lcd_draw_funcs.s

lcdDrawCursor 00000000

Symbol: lcdDrawCursor
   Definitions
      At line 8 in file lcd_draw_funcs.s
   Uses
      At line 7 in file lcd_draw_funcs.s
Comment: lcdDrawCursor used once



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

lcdDrawNum 000000D4

Symbol: lcdDrawNum
   Definitions
      At line 89 in file lcd_draw_funcs.s
   Uses
      At line 88 in file lcd_draw_funcs.s
      At line 133 in file lcd_draw_funcs.s
      At line 138 in file lcd_draw_funcs.s
      At line 154 in file lcd_draw_funcs.s
      At line 159 in file lcd_draw_funcs.s
      At line 195 in file lcd_draw_funcs.s
      At line 200 in file lcd_draw_funcs.s

lcdDrawRemainingTime 000001DA

Symbol: lcdDrawRemainingTime
   Definitions
      At line 183 in file lcd_draw_funcs.s
   Uses
      At line 182 in file lcd_draw_funcs.s
Comment: lcdDrawRemainingTime used once
lcdDrawShips 00000332

Symbol: lcdDrawShips
   Definitions
      At line 317 in file lcd_draw_funcs.s
   Uses
      At line 316 in file lcd_draw_funcs.s
Comment: lcdDrawShips used once
lcdDrawXY 00000104

Symbol: lcdDrawXY
   Definitions
      At line 111 in file lcd_draw_funcs.s
   Uses
      At line 110 in file lcd_draw_funcs.s
Comment: lcdDrawXY used once
lcd_dfuncs 00000000

Symbol: lcd_dfuncs
   Definitions
      At line 1 in file lcd_draw_funcs.s
   Uses
      None
Comment: lcd_dfuncs unused
write_char 000001C0

Symbol: write_char
   Definitions
      At line 169 in file lcd_draw_funcs.s
   Uses
      At line 174 in file lcd_draw_funcs.s
Comment: write_char used once
write_num 000000E8

Symbol: write_num
   Definitions
      At line 97 in file lcd_draw_funcs.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 103 in file lcd_draw_funcs.s
Comment: write_num used once
27 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TIMER0_TAV 00000000

Symbol: TIMER0_TAV
   Definitions
      At line 185 in file lcd_draw_funcs.s
   Uses
      At line 186 in file lcd_draw_funcs.s
Comment: TIMER0_TAV used once
X 00000000

Symbol: X
   Definitions
      At line 113 in file lcd_draw_funcs.s
   Uses
      At line 116 in file lcd_draw_funcs.s
Comment: X used once
Y 00000000

Symbol: Y
   Definitions
      At line 114 in file lcd_draw_funcs.s
   Uses
      At line 140 in file lcd_draw_funcs.s
Comment: Y used once
colon 00000000

Symbol: colon
   Definitions
      At line 115 in file lcd_draw_funcs.s
   Uses
      At line 121 in file lcd_draw_funcs.s
      At line 145 in file lcd_draw_funcs.s

lcdWriteData 00000000

Symbol: lcdWriteData
   Definitions
      At line 4 in file lcd_draw_funcs.s
   Uses
      At line 28 in file lcd_draw_funcs.s
      At line 35 in file lcd_draw_funcs.s
      At line 43 in file lcd_draw_funcs.s
      At line 44 in file lcd_draw_funcs.s
      At line 53 in file lcd_draw_funcs.s
      At line 59 in file lcd_draw_funcs.s
      At line 60 in file lcd_draw_funcs.s
      At line 70 in file lcd_draw_funcs.s
      At line 77 in file lcd_draw_funcs.s
      At line 99 in file lcd_draw_funcs.s
      At line 171 in file lcd_draw_funcs.s
      At line 232 in file lcd_draw_funcs.s
      At line 242 in file lcd_draw_funcs.s
      At line 248 in file lcd_draw_funcs.s
      At line 249 in file lcd_draw_funcs.s
      At line 250 in file lcd_draw_funcs.s
      At line 251 in file lcd_draw_funcs.s
      At line 252 in file lcd_draw_funcs.s
      At line 253 in file lcd_draw_funcs.s
      At line 254 in file lcd_draw_funcs.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 255 in file lcd_draw_funcs.s
      At line 287 in file lcd_draw_funcs.s
      At line 297 in file lcd_draw_funcs.s
      At line 303 in file lcd_draw_funcs.s
      At line 304 in file lcd_draw_funcs.s
      At line 305 in file lcd_draw_funcs.s
      At line 306 in file lcd_draw_funcs.s
      At line 307 in file lcd_draw_funcs.s
      At line 308 in file lcd_draw_funcs.s
      At line 309 in file lcd_draw_funcs.s
      At line 310 in file lcd_draw_funcs.s

num_0 00000000

Symbol: num_0
   Definitions
      At line 91 in file lcd_draw_funcs.s
   Uses
      At line 92 in file lcd_draw_funcs.s
Comment: num_0 used once
setCursor 00000000

Symbol: setCursor
   Definitions
      At line 5 in file lcd_draw_funcs.s
   Uses
      At line 26 in file lcd_draw_funcs.s
      At line 33 in file lcd_draw_funcs.s
      At line 40 in file lcd_draw_funcs.s
      At line 56 in file lcd_draw_funcs.s
      At line 68 in file lcd_draw_funcs.s
      At line 75 in file lcd_draw_funcs.s
      At line 96 in file lcd_draw_funcs.s
      At line 119 in file lcd_draw_funcs.s
      At line 124 in file lcd_draw_funcs.s
      At line 143 in file lcd_draw_funcs.s
      At line 148 in file lcd_draw_funcs.s
      At line 224 in file lcd_draw_funcs.s
      At line 238 in file lcd_draw_funcs.s
      At line 279 in file lcd_draw_funcs.s
      At line 293 in file lcd_draw_funcs.s

ships 00000000

Symbol: ships
   Definitions
      At line 319 in file lcd_draw_funcs.s
   Uses
      At line 320 in file lcd_draw_funcs.s
Comment: ships used once
8 symbols
371 symbols in table
